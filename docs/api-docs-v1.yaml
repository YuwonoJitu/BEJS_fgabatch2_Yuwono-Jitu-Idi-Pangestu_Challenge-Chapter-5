{
  "swagger": "2.0",
  "info": {
    "description": "API Documentation for Bank Account Server",
    "version": "1.0.0",
    "title": "Bank Account API",
    "contact": {
      "email": "mamangcihuy@gmail.com"
    }
  },
  "host": "localhost:3000",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "User",
      "description": "User API"
    },
    {
      "name": "Account",
      "description": "Account API"
    },
    {
      "name": "Transaction",
      "description": "Transaction API"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": ["User"],
        "summary": "Get all users",
        "description": "Retrieve a list of all users",
        "operationId": "getUsers",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "500": {
            "description": "Failed to retrieve users"
          }
        }
      },
      "post": {
        "tags": ["User"],
        "summary": "Create a new user",
        "description": "Create a new user with the provided data",
        "operationId": "createUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object that needs to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Failed to create user"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["User"],
        "summary": "Get user by ID",
        "description": "Retrieve a user by ID",
        "operationId": "getUserById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to retrieve",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Failed to retrieve user"
          }
        }
      }
    },
    "/accounts": {
      "get": {
        "tags": ["Account"],
        "summary": "Get all accounts",
        "description": "Retrieve a list of all accounts",
        "operationId": "getAccounts",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Account"
              }
            }
          },
          "404": {
            "description": "No accounts found"
          },
          "500": {
            "description": "Failed to retrieve accounts"
          }
        }
      },
      "post": {
        "tags": ["Account"],
        "summary": "Create a new account",
        "description": "Create a new account with the provided data",
        "operationId": "createAccount",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Account object that needs to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Account created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Failed to create account"
          }
        }
      }
    },
    "/accounts/{id}": {
      "get": {
        "tags": ["Account"],
        "summary": "Get account by ID",
        "description": "Retrieve an account by ID",
        "operationId": "getAccountById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the account to retrieve",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "404": {
            "description": "Account not found"
          },
          "500": {
            "description": "Failed to retrieve account"
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "tags": ["Transaction"],
        "summary": "Get all transactions",
        "description": "Retrieve a list of all transactions",
        "operationId": "getTransactions",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Transaction"
              }
            }
          },
          "500": {
            "description": "Failed to retrieve transactions"
          }
        }
      },
      "post": {
        "tags": ["Transaction"],
        "summary": "Create a new transaction",
        "description": "Create a new transaction with the provided data",
        "operationId": "createTransaction",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Transaction object that needs to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Transaction created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Failed to create transaction"
          }
        }
      }
    },
    "/transactions/{id}": {
      "get": {
        "tags": ["Transaction"],
        "summary": "Get transaction by ID",
        "description": "Retrieve a transaction by ID",
        "operationId": "getTransactionById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the transaction to retrieve",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          },
          "404": {
            "description": "Transaction not found"
          },
          "500": {
            "description": "Failed to retrieve transaction"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Account": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        },
        "bank_name": {
          "type": "string"
        },
        "bank_account_number": {
          "type": "string"
        },
        "balance": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "Transaction": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "sourceAccountId": {
          "type": "integer",
          "format": "int64"
        },
        "destinationAccountId": {
          "type": "integer",
          "format": "int64"
        },
        "amount": {
          "type": "number",
          "format": "double"
        }
      }
    }
  }
}
